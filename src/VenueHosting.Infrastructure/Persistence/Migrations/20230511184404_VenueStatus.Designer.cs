// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenueHosting.Infrastructure.Persistence;

#nullable disable

namespace VenueHosting.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(VenueHostingDbContext))]
    [Migration("20230511184404_VenueStatus")]
    partial class VenueStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VenueHosting.Domain.Attendee.Attendee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Attendees", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.AttendeeReview.AttendeeReview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDateTime");

                    b.Property<float>("RatingGiven")
                        .HasColumnType("real")
                        .HasColumnName("RatingGiven");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AttendeeReviews", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Bill.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LesseeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Bills", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Lessee.Lessee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Lessees", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.LesseeReview.LesseeReview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDateTime");

                    b.Property<Guid>("LesseeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("RatingGiven")
                        .HasColumnType("real")
                        .HasColumnName("RatingGiven");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LesseeReviews", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Owner.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Owners", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Place.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OwnerId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Places", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Reservation.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.Property<Guid>("AttendeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AttendeeId");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BillId");

                    b.Property<DateTime>("ReservationDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReservationDateTime");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("VenueId");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDateTime");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Venue.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndAtDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("LesseeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartAtDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedAtDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Venues", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.VenueReview.VenueReview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDateTime");

                    b.Property<float>("RatingGiven")
                        .HasColumnType("real")
                        .HasColumnName("RatingGiven");

                    b.Property<Guid>("VenueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("VenueReviews", (string)null);
                });

            modelBuilder.Entity("VenueHosting.Domain.Attendee.Attendee", b =>
                {
                    b.OwnsMany("VenueHosting.Domain.Reservation.ValueObjects.ReservationId", "ReservationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("AttendeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("AttendeeId");

                            b1.ToTable("AttendeeReservationIds", null, t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("AttendeeId");
                        });

                    b.OwnsMany("VenueHosting.Domain.Venue.ValueObjects.VenueId", "VenueIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("AttendeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("AttendeeId");

                            b1.ToTable("AttendeeVenueIds", null, t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("AttendeeId");
                        });

                    b.OwnsMany("VenueHosting.Domain.AttendeeReview.ValueObjects.AttendeeReviewId", "AttendeeReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("AttendeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("AttendeeReviewId");

                            b1.HasKey("Id");

                            b1.HasIndex("AttendeeId");

                            b1.ToTable("AttendeeReviewIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AttendeeId");
                        });

                    b.OwnsMany("VenueHosting.Domain.Bill.ValueObjects.BillId", "BillIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("AttendeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("AttendeeId");

                            b1.ToTable("AttendeeBillIds", null, t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("AttendeeId");
                        });

                    b.Navigation("AttendeeReviewIds");

                    b.Navigation("BillIds");

                    b.Navigation("ReservationIds");

                    b.Navigation("VenueIds");
                });

            modelBuilder.Entity("VenueHosting.Domain.Bill.Bill", b =>
                {
                    b.OwnsOne("VenueHosting.Domain.Common.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("BillId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BillId");

                            b1.ToTable("Bills");

                            b1.WithOwner()
                                .HasForeignKey("BillId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("VenueHosting.Domain.Lessee.Lessee", b =>
                {
                    b.OwnsMany("VenueHosting.Domain.Venue.ValueObjects.VenueId", "VenueIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("LesseeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("LesseeId");

                            b1.ToTable("Lessees_VenueIds", t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("LesseeId");
                        });

                    b.OwnsMany("VenueHosting.Domain.LesseeReview.ValueObjects.LesseeReviewId", "LesseeReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("LesseeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("LesseeId");

                            b1.ToTable("LesseeReviewIds", null, t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("LesseeId");
                        });

                    b.Navigation("LesseeReviewIds");

                    b.Navigation("VenueIds");
                });

            modelBuilder.Entity("VenueHosting.Domain.Owner.Owner", b =>
                {
                    b.OwnsMany("VenueHosting.Domain.Place.ValueObjects.PlaceId", "PlaceIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("OwnerPlaceIds", null, t =>
                                {
                                    t.Property("Id")
                                        .HasColumnName("Id1");
                                });

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("PlaceIds");
                });

            modelBuilder.Entity("VenueHosting.Domain.Place.Place", b =>
                {
                    b.OwnsMany("VenueHosting.Domain.Place.Entities.Facility", "Facilities", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Description");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Name");

                            b1.Property<Guid>("PlaceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int")
                                .HasColumnName("Quantity");

                            b1.HasKey("Id");

                            b1.HasIndex("PlaceId");

                            b1.ToTable("Facility");

                            b1.WithOwner()
                                .HasForeignKey("PlaceId");
                        });

                    b.OwnsOne("VenueHosting.Domain.Place.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PlaceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Number")
                                .HasColumnType("int");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PlaceId");

                            b1.ToTable("Places");

                            b1.WithOwner()
                                .HasForeignKey("PlaceId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("VenueHosting.Domain.Venue.Venue", b =>
                {
                    b.OwnsMany("VenueHosting.Domain.Venue.Entities.Activity", "Activities", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ActivityId");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VenueId");

                            b1.ToTable("VenueActivities", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsMany("VenueHosting.Domain.Reservation.ValueObjects.ReservationId", "ReservationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ReservationId");

                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VenueId");

                            b1.ToTable("VenueReservationIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsMany("VenueHosting.Domain.VenueReview.ValueObjects.VenueReviewId", "VenueReviewIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("VenueReviewId");

                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VenueId");

                            b1.ToTable("VenueReviewIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.Navigation("Activities");

                    b.Navigation("ReservationIds");

                    b.Navigation("VenueReviewIds");
                });
#pragma warning restore 612, 618
        }
    }
}
