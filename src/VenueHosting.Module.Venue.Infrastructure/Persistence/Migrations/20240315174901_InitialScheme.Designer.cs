// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenueHosting.Module.Venue.Infrastructure.Persistence;

#nullable disable

namespace VenueHosting.Module.Venue.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(VenueApplicationDbContext))]
    [Migration("20240315174901_InitialScheme")]
    partial class InitialScheme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VenueHosting.Module.Venue.Domain.Aggregates.Venue.Venue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EndAtDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndAtDateTime");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EventName");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HostId");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlaceId");

                    b.Property<DateTime>("StartAtDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartAtDateTime");

                    b.Property<int>("VenueStatus")
                        .HasColumnType("int")
                        .HasColumnName("VenueStatus");

                    b.Property<int>("Visibility")
                        .HasColumnType("int")
                        .HasColumnName("Visibility");

                    b.HasKey("Id");

                    b.ToTable("Venues", "Venue");
                });

            modelBuilder.Entity("VenueHosting.Module.Venue.Domain.Aggregates.Venue.Venue", b =>
                {
                    b.OwnsMany("VenueHosting.Module.Venue.Domain.Aggregates.Venue.Entities.Activity", "Activities", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)")
                                .HasColumnName("Description");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Name");

                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VenueId");

                            b1.ToTable("Activities", "Venue");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsMany("VenueHosting.Module.Venue.Domain.Aggregates.Venue.Entities.Amenity", "Amenities", b1 =>
                        {
                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool>("IsAvailable")
                                .HasColumnType("bit")
                                .HasColumnName("IsAvailable");

                            b1.Property<int>("Quantity")
                                .HasColumnType("int")
                                .HasColumnName("Quantity");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("Title");

                            b1.HasKey("VenueId", "Id");

                            b1.ToTable("Amenities", "Venue");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsMany("VenueHosting.Module.Venue.Domain.Aggregates.Venue.Entities.PartnerReference", "Partners", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("PartnerId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PartnerId");

                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id");

                            b1.HasIndex("VenueId");

                            b1.ToTable("Partners", "Venue");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.OwnsOne("VenueHosting.Module.Venue.Domain.Aggregates.Venue.ValueObjects.Schedule", "Schedule", b1 =>
                        {
                            b1.Property<Guid>("VenueId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("EndTime")
                                .HasColumnType("datetimeoffset")
                                .HasColumnName("EndTime");

                            b1.Property<bool>("IsBooked")
                                .HasColumnType("bit")
                                .HasColumnName("IsBooked");

                            b1.Property<DateTimeOffset>("StartTime")
                                .HasColumnType("datetimeoffset")
                                .HasColumnName("StartTime");

                            b1.HasKey("VenueId");

                            b1.ToTable("Venues", "Venue");

                            b1.WithOwner()
                                .HasForeignKey("VenueId");
                        });

                    b.Navigation("Activities");

                    b.Navigation("Amenities");

                    b.Navigation("Partners");

                    b.Navigation("Schedule")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
